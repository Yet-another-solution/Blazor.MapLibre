@page "/Examples/LoadGeoJson"
@using Community.Blazor.MapLibre.Models
@using Community.Blazor.MapLibre.Models.Source
<h3>LoadGeoJson</h3>

<div class="shadow rounded col">
    <div>
        <Map @ref="_mapWithGeoJson" Options="_mapWithGeoJsonOptions" OnLoad="HandleMapLoadGeoJson" Class="rounded-top"
             Height="300px"></Map>
    </div>
    <h3 class="p-3">Add GEOJson</h3>
    <div class="alert alert-dark mb-0">

        <code>
                <pre>
&lt;Map &#64;ref="_mapWithGeoJson" Options="_mapWithGeoJsonOptions" OnLoad="HandleMapLoadGeoJson" &gt;&lt;/Map&gt;

                    @@code{
                    private Map _mapWithGeoJson { get; set; } = new Map();

                    private readonly MapOptions _mapWithGeoJsonOptions = new MapOptions()
                    {
                    Center = new LngLat()
                    {
                    Latitude = 45.188193,
                    Longitude = -68.991841
                    },
                    Zoom = 4
                    };

                    private async Task HandleMapLoadGeoJson(EventArgs args)
                    {
                    await _mapWithGeoJson.AddSource("maine", new GeoJSONSource()
                    {
                    Data = new
                    {
                    Type = "Feature",
                    Geometry = new
                    {
                    Type = "Polygon",
                    Coordinates = new[]
                    {
                    new[]
                    {
                    new[] { -67.13734351262877, 45.137451890638886 },
                    new[] { -66.96466, 44.8097 },
                    new[] { -68.03252, 44.3252 },
                    new[] { -69.06, 43.98 },
                    new[] { -70.11617, 43.68405 },
                    new[] { -70.64573401557249, 43.090083319667144 },
                    new[] { -70.75102474636725, 43.08003225358635 },
                    new[] { -70.79761105007827, 43.21973948828747 },
                    new[] { -70.98176001655037, 43.36789581966826 },
                    new[] { -70.94416541205806, 43.46633942318431 },
                    new[] { -71.08482, 45.3052400000002 },
                    new[] { -70.6600225491012, 45.46022288673396 },
                    new[] { -70.30495378282376, 45.914794623389355 },
                    new[] { -70.00014034695016, 46.69317088478567 },
                    new[] { -69.23708614772835, 47.44777598732787 },
                    new[] { -68.90478084987546, 47.184794623394396 },
                    new[] { -68.23430497910454, 47.35462921812177 },
                    new[] { -67.79035274928509, 47.066248887716995 },
                    new[] { -67.79141211614706, 45.702585354182816 },
                    new[] { -67.13734351262877, 45.137451890638886 }
                    }
                    }
                    }
                    }
                    });

                    await _mapWithGeoJson.AddLayer(new Layer
                    {
                    Id = "GeoJsonLayerId",
                    Type = "fill",
                    Source = "maine",
                    Paint = new Dictionary&lt;string, object&gt;
                    {
                    { "fill-color", "#088" },
                    { "fill-opacity", 0.8 }
                    }
                    });
                    }

                    }
</pre>
        </code>
    </div>
</div>

@code {
    private Map _mapWithGeoJson { get; set; } = new Map();
    private readonly MapOptions _mapWithGeoJsonOptions = new MapOptions()
    {
        Center = new LngLat()
        {
            Latitude = 45.188193,
            Longitude = -68.991841
        },
        Zoom = 4
    };
    private async Task HandleMapLoadGeoJson(EventArgs args)
    {
        await _mapWithGeoJson.AddSource("maine", new GeoJSONSource()
        {
            Data = new 
            {
                Type = "Feature",
                Geometry = new
                {
                    Type = "Polygon",
                    Coordinates = new[]
                    {
                        new[]
                        {
                            new []{-67.13734351262877, 45.137451890638886},
                            new []{-66.96466, 44.8097},
                            new []{-68.03252, 44.3252},
                            new []{-69.06, 43.98},
                            new []{-70.11617, 43.68405},
                            new []{-70.64573401557249, 43.090083319667144},
                            new []{-70.75102474636725, 43.08003225358635},
                            new []{-70.79761105007827, 43.21973948828747},
                            new []{-70.98176001655037, 43.36789581966826},
                            new []{-70.94416541205806, 43.46633942318431},
                            new []{-71.08482, 45.3052400000002},
                            new []{-70.6600225491012, 45.46022288673396},
                            new []{-70.30495378282376, 45.914794623389355},
                            new []{-70.00014034695016, 46.69317088478567},
                            new []{-69.23708614772835, 47.44777598732787},
                            new []{-68.90478084987546, 47.184794623394396},
                            new []{-68.23430497910454, 47.35462921812177},
                            new []{-67.79035274928509, 47.066248887716995},
                            new []{-67.79141211614706, 45.702585354182816},
                            new []{-67.13734351262877, 45.137451890638886}
                        }
                    }
                }
            }
        });

        await _mapWithGeoJson.AddLayer(new Layer
        {
            Id = "GeoJsonLayerId",
            Type = "fill",
            Source = "maine",
            Paint =  new Dictionary<string, object>
            {
                { "fill-color", "#088" },
                { "fill-opacity", 0.8 }
            }
        });
    }
}